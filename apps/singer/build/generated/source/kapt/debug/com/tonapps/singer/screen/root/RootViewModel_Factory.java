// Generated by Dagger (https://dagger.dev).
package com.tonapps.singer.screen.root;

import com.tonapps.singer.core.account.AccountRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RootViewModel_Factory implements Factory<RootViewModel> {
  private final Provider<AccountRepository> accountRepositoryProvider;

  public RootViewModel_Factory(Provider<AccountRepository> accountRepositoryProvider) {
    this.accountRepositoryProvider = accountRepositoryProvider;
  }

  @Override
  public RootViewModel get() {
    return newInstance(accountRepositoryProvider.get());
  }

  public static RootViewModel_Factory create(
      Provider<AccountRepository> accountRepositoryProvider) {
    return new RootViewModel_Factory(accountRepositoryProvider);
  }

  public static RootViewModel newInstance(AccountRepository accountRepository) {
    return new RootViewModel(accountRepository);
  }
}
