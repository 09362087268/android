// Generated by Dagger (https://dagger.dev).
package com.tonapps.singer;

import com.tonapps.singer.core.account.AccountRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAccountRepositoryFactory implements Factory<AccountRepository> {
  private final AppModule module;

  public AppModule_ProvideAccountRepositoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public AccountRepository get() {
    return provideAccountRepository(module);
  }

  public static AppModule_ProvideAccountRepositoryFactory create(AppModule module) {
    return new AppModule_ProvideAccountRepositoryFactory(module);
  }

  public static AccountRepository provideAccountRepository(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideAccountRepository());
  }
}
